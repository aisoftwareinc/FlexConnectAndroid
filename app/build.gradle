apply plugin: 'com.android.application'
//apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'


android {
    compileSdkVersion 27
    defaultConfig {
        multiDexEnabled true
        applicationId "com.aisoftware.flexconnect"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "0.9"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled = false
            buildConfigField "boolean", "SEND_DELIVERED_UPDATE", "true"
            buildConfigField "boolean", "USE_DEFAULT_INTERVAL", "false"
            buildConfigField "boolean", "ENABLE_CRASHLYTICS", "true"
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled = true
            buildConfigField "boolean", "SEND_DELIVERED_UPDATE", "false"
            buildConfigField "boolean", "USE_DEFAULT_INTERVAL", "true"
            buildConfigField "boolean", "ENABLE_CRASHLYTICS", "true"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            java {
                exclude '**/LICENSE.java'
            }
        }
        androidTest {
            java {
                exclude '**/LICENSE.java'
            }
        }
        android.lintOptions {
            abortOnError false
            quiet true
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }
}

androidExtensions {
    experimental = true
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    def support_version = "27.1.0"
    def google_play_services = "15.0.1"
    def lifecycle_version = "1.1.1"
    def room_version = "1.1.0"
    def nav_version = "1.0.0-alpha01"
    def ktx_version = "0.3"
    def picasso_version = "2.71828"
    def mockito_version = "2.18.3"
    def okhttp_version = "3.10.0"
    def crashlytics_version = "2.9.3@aar"
    def answers_version = "1.4.2@aar"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5'

    /* Support */
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:support-v13:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation "com.google.android.gms:play-services-location:$google_play_services"

    // Android KTX for framework API
    implementation "androidx.core:core-ktx:$ktx_version"

    /* Masked Edit Text View */
    implementation 'com.github.reinaldoarrosi:maskededittext:1.1.0'

    /* Architecture Components */
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"
    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"

    /* Room */
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    implementation "android.arch.persistence.room:guava:$room_version"

    /* Navigation */
    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"

    /* Retrofit */
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation('com.squareup.retrofit2:converter-simplexml:2.1.0', {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    })

    /* Moshi: https://github.com/square/moshi */
    implementation 'com.squareup.moshi:moshi-kotlin:1.6.0'

    /* Picasso */
    implementation "com.squareup.picasso:picasso:$picasso_version"

    /* Fabric - Crashlytics, Answers */
    implementation ("com.crashlytics.sdk.android:crashlytics:$crashlytics_version") {
        transitive = true
    }

    implementation ("com.crashlytics.sdk.android:answers:$answers_version") {
        transitive = true
    }

    /* Testing */
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation ('com.android.support.test:runner:1.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation ("android.arch.core:core-testing:$lifecycle_version", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })

    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    androidTestImplementation ('com.android.support.test:runner:1.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation ('com.android.support.test.espresso:espresso-core:3.0.2') {
        exclude group: 'com.google.code.findbugs'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation ('com.android.support.test:rules:1.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
}
